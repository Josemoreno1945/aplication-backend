-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.assets
(
    id_assets integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    id_inventory integer,
    type type_enum,
    classification character varying(50) COLLATE pg_catalog."default",
    description character varying(200) COLLATE pg_catalog."default",
    color character varying(20) COLLATE pg_catalog."default",
    brand character varying(20) COLLATE pg_catalog."default",
    model character varying(20) COLLATE pg_catalog."default",
    serial character varying(20) COLLATE pg_catalog."default",
    height double precision,
    width double precision,
    depth double precision,
    plate character varying(20) COLLATE pg_catalog."default",
    bodywork character varying(50) COLLATE pg_catalog."default",
    engine character varying(50) COLLATE pg_catalog."default",
    year_of_the_vehicle integer,
    acquisition_value double precision,
    use_status use_status_enum,
    conservation_status conservation_status_enum,
    observation character varying(200) COLLATE pg_catalog."default",
    physical_location character varying(100) COLLATE pg_catalog."default",
    direction_dependency character varying(100) COLLATE pg_catalog."default",
    level character varying(100) COLLATE pg_catalog."default",
    analyst character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT assets_pkey PRIMARY KEY (id_assets)
);

CREATE TABLE IF NOT EXISTS public.assets_history
(
    id_history integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    id_assets integer,
    id_event_type integer,
    description character varying(150) COLLATE pg_catalog."default",
    event_date date,
    event_time time without time zone,
    CONSTRAINT assets_history_pkey PRIMARY KEY (id_history)
);

CREATE TABLE IF NOT EXISTS public.departments
(
    id_departments integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(100) COLLATE pg_catalog."default",
    address character varying(150) COLLATE pg_catalog."default",
    phone character varying(15) COLLATE pg_catalog."default",
    email character varying(50) COLLATE pg_catalog."default" NOT NULL,
    operational_status operational_status_enum,
    CONSTRAINT departments_pkey PRIMARY KEY (id_departments),
    CONSTRAINT departments_email_key UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.event_type
(
    id_event_type integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT event_type_pkey PRIMARY KEY (id_event_type)
);

CREATE TABLE IF NOT EXISTS public.inventory
(
    id_inventory integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    id_departments integer,
    available_quantity integer,
    last_updated timestamp without time zone,
    inventory_status inventory_status_enum,
    commentary character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT inventory_pkey PRIMARY KEY (id_inventory)
);

CREATE TABLE IF NOT EXISTS public.permissions
(
    id_permissions integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT permissions_pkey PRIMARY KEY (id_permissions)
);

CREATE TABLE IF NOT EXISTS public.report
(
    id_support integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    id_users integer,
    date date,
    hour time without time zone,
    priority priority_enum,
    description character varying(150) COLLATE pg_catalog."default",
    CONSTRAINT report_pkey PRIMARY KEY (id_support)
);

CREATE TABLE IF NOT EXISTS public.rol_permissions
(
    id_rol_permissions integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    id_roles integer,
    id_permissions integer,
    CONSTRAINT rol_permissions_pkey PRIMARY KEY (id_rol_permissions)
);

CREATE TABLE IF NOT EXISTS public.roles
(
    id_roles integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT roles_pkey PRIMARY KEY (id_roles)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id_users integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    first_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    user_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    id_roles integer,
    email character varying(50) COLLATE pg_catalog."default" NOT NULL,
    status user_status NOT NULL DEFAULT 'active'::user_status,
    date timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT users_pkey PRIMARY KEY (id_users),
    CONSTRAINT users_email_key UNIQUE (email),
    CONSTRAINT users_user_name_key UNIQUE (user_name)
);

CREATE TABLE IF NOT EXISTS public.users_departments
(
    id_users_departments integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    id_departments integer,
    id_users integer,
    CONSTRAINT users_departments_pkey PRIMARY KEY (id_users_departments)
);

ALTER TABLE IF EXISTS public.assets
    ADD CONSTRAINT assets_id_inventory_fkey FOREIGN KEY (id_inventory)
    REFERENCES public.inventory (id_inventory) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.inventory
    ADD CONSTRAINT inventory_id_departments_fkey FOREIGN KEY (id_departments)
    REFERENCES public.departments (id_departments) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.report
    ADD CONSTRAINT report_id_users_fkey FOREIGN KEY (id_users)
    REFERENCES public.users (id_users) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.rol_permissions
    ADD CONSTRAINT rol_permissions_id_permissions_fkey FOREIGN KEY (id_permissions)
    REFERENCES public.permissions (id_permissions) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.rol_permissions
    ADD CONSTRAINT rol_permissions_id_roles_fkey FOREIGN KEY (id_roles)
    REFERENCES public.roles (id_roles) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT users_id_roles_fkey FOREIGN KEY (id_roles)
    REFERENCES public.roles (id_roles) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users_departments
    ADD CONSTRAINT users_departments_department_id_fkey FOREIGN KEY (id_departments)
    REFERENCES public.departments (id_departments) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.users_departments
    ADD CONSTRAINT users_departments_id_users_fkey FOREIGN KEY (id_users)
    REFERENCES public.users (id_users) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;